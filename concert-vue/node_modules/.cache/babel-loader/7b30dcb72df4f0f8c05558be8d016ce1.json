{"remainingRequest":"/home/cedricmaglione/Rendu/Jaoued/my_show_time/concert-vue/node_modules/babel-loader/lib/index.js!/home/cedricmaglione/Rendu/Jaoued/my_show_time/concert-vue/node_modules/eslint-loader/index.js??ref--13-0!/home/cedricmaglione/Rendu/Jaoued/my_show_time/concert-vue/src/store/modules/user.js","dependencies":[{"path":"/home/cedricmaglione/Rendu/Jaoued/my_show_time/concert-vue/src/store/modules/user.js","mtime":1599823921260},{"path":"/home/cedricmaglione/Rendu/Jaoued/my_show_time/concert-vue/node_modules/cache-loader/dist/cjs.js","mtime":1599728590115},{"path":"/home/cedricmaglione/Rendu/Jaoued/my_show_time/concert-vue/node_modules/babel-loader/lib/index.js","mtime":1599728590059},{"path":"/home/cedricmaglione/Rendu/Jaoued/my_show_time/concert-vue/node_modules/eslint-loader/index.js","mtime":1599728590343}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/cedricmaglione/Rendu/Jaoued/my_show_time/concert-vue/src/store/modules/user.js"],"names":["token","window","localStorage","getItem","url","state","users","login","register","UserById","deleteUserById","message","createmessage","getters","getAllUser","getLogin","getRegister","getUser","getMessage","getUpdateMessage","updatemessage","getCreateMessage","actions","fetchAllUser","commit","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","then","response","json","result","catch","error","console","log","loginForm","obj","raw","JSON","stringify","email","password","body","setItem","user","_id","location","href","password_confirmation","phone","firstname","lastname","createUser","form","formdata","FormData","admin","c_password","editUserForm","id","reload","fetchUser","deleteUser","mutations","loginMessage","registerMessage","createMessage","updateMessage"],"mappings":"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","sourcesContent":["  const token = window.localStorage.getItem('token') || \"\";  \n  var url = `http://localhost:3000`;\n\nconst state = {\n\n    users:[],\n    login:[],\n    register:[],\n\n    UserById:[],\n    deleteUserById:[], \n    message:[],\n    createmessage:[],\n\n\n}\nconst getters = {\n\n    getAllUser:(state) =>(state.users),\n    getLogin:(state) => (state.login),\n    getRegister:(state) =>(state.register),   \n    getUser:(state) =>(state.UserById),\n    deleteUserById:(state)=>(state.deleteUserById),\n    getMessage:(state) =>(state.message),\n    getUpdateMessage:(state)=>(state.updatemessage),\n    getCreateMessage:(state)=>(state.createmessage),\n}\nconst actions = {\n\n                                                                            /* ====== FETCH ALL USER ======= */\n  async fetchAllUser({commit}){\n        var myHeaders = new Headers();\n        myHeaders.append(\"Authorization\", `Bearer ${token}` );\n        var requestOptions = {\n          method: 'GET',\n          headers: myHeaders,\n          redirect: 'follow'\n        };\n\n        fetch(\"http://localhost:3000/users\", requestOptions)\n          .then(response => response.json())\n          .then(result => commit('fetchAllUser',result))\n          .catch(error => console.log('error', error));\n            },\n\n                                                                            /* ====== LOGIN ======= */\n    async loginForm({commit},obj){\n            var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n\n            var raw = JSON.stringify({\"email\":obj.email,\"password\":obj.password});\n\n            var requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n            };\n\n\n        fetch(\"http://localhost:3000/auth\", requestOptions)\n        .then(response => response.json())\n        .then(result =>  {\n            commit('loginMessage',result);\n       \n            window.localStorage.setItem('token',result.token.token);\n            window.localStorage.setItem('id',result.user._id);\n            if(!result.message){\n              window.location.href=\"/\";\n            }\n          })\n        .catch(error => console.log('error', error));\n    },\n                                                                           /* ====== REGISTER ======= */\n\n  async register({commit},obj){\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n\n            var raw = JSON.stringify({\"email\":obj.email,\"password\":obj.password,\"password_confirmation\":obj.password_confirmation,\"phone\":obj.phone,\"firstname\":obj.firstname,\"lastname\":obj.lastname});\n\n            var requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n            };\n\n            fetch(\"http://localhost:3000/users\", requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                commit('registerMessage',result);\n                if(!result.message){\n                    window.location.href=\"/\";\n                  }\n            \n            })\n            .catch(error => console.log('error', error));\n                },\n\n\n// CREATE USER \nasync createUser({commit},form){\n  var formdata = new FormData();\n  formdata.append(\"lastname\", form.lastname);\n  formdata.append(\"firstname\", form.firstname);\n  formdata.append(\"email\", form.email);\n  formdata.append(\"admin\", form.admin);\n  formdata.append(\"phone\", form.phone);\n  formdata.append(\"password\", form.password);\n  formdata.append(\"c_password\", form.c_password);\n  \n  \n\n  var requestOptions = {\n    method: 'POST',\n    body: formdata,\n    redirect: 'follow'\n  };\n  \n  fetch(`${url}/users`, requestOptions)\n    .then(response => response.json())\n    .then(result =>  {\n        commit('createMessage',result);\n\n       \n      })\n    .catch(error => console.log('error', error));\n},\n\n// EDIT USER \nasync editUserForm({commit},obj){\n  var myHeaders = new Headers();\n        myHeaders.append(\"Authorization\", `Bearer ${token}`);\n\n        myHeaders.append('Content-Type','application/json');\n        var raw=JSON.stringify({\"email\":obj.email,\"phone\":obj.phone,\"firstname\":obj.firstname,\"lastname\":obj.lastname,\"admin\":obj.admin});\n  \n\n  var requestOptions = {\n    method: 'PUT',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  \n  fetch(`${url}/users/${obj.id}`, requestOptions)\n    .then(response => response.json())\n    .then(result =>  {\n        commit('updateMessage',result);\n        location.reload();\n       \n      })\n    .catch(error => console.log('error', error));\n},\n\n// FETCH USER BY ID\nasync fetchUser({commit},id){\n  var myHeaders = new Headers();\n  myHeaders.append(\"Authorization\", `Bearer ${token}`);\n\n  var requestOptions = {\n  method: 'GET',\n  headers: myHeaders,\n  \n  redirect: 'follow'\n  };\n\n  fetch(`${url}/users/${id}`, requestOptions)\n  .then(response => response.json())\n  .then(result => {\n    commit('UserById',result);\n   \n\n  })\n  .catch(error => console.log('error', error));\n      },\n\n// DELETE USER BY ID\nasync deleteUser({commit},id){\nvar myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", `Bearer ${token}`);\n\nvar requestOptions = {\nmethod: 'DELETE',\nheaders: myHeaders,\n\nredirect: 'follow'\n};\n\nfetch(`${url}/users/${id}`, requestOptions)\n.then(response => response.json())\n.then(result => {\ncommit('deleteUserById',result);\n\n})\n.catch(error => console.log('error', error));\n},\n  \n\n\n}\n\n\n\nconst mutations = {\n    loginMessage:(state,login) =>(state.login = login),\n    fetchAllUser:(state,users) => (state.users = users),\n    registerMessage:(state,register)=>(state.register = register),\n\n    UserById:(state,UserById)=>(state.UserById = UserById),\n    deleteUserById:(state,deleteUserById)=>(state.deleteUserById = deleteUserById),    \n    createMessage:(state,createmessage)=>(state.createmessage = createmessage),\n    updateMessage:(state,updatemessage)=>(state.updatemessage = updatemessage),\n}\n\n\n\nexport default{\n    state,\n    getters,\n    actions,\n    mutations,\n}"]}]}