{"remainingRequest":"/home/jaoued/Documents/Rendu/my_show_time/concert-vue/node_modules/babel-loader/lib/index.js!/home/jaoued/Documents/Rendu/my_show_time/concert-vue/node_modules/eslint-loader/index.js??ref--13-0!/home/jaoued/Documents/Rendu/my_show_time/concert-vue/src/store/modules/user.js","dependencies":[{"path":"/home/jaoued/Documents/Rendu/my_show_time/concert-vue/src/store/modules/user.js","mtime":1599653757941},{"path":"/home/jaoued/Documents/Rendu/my_show_time/concert-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaoued/Documents/Rendu/my_show_time/concert-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jaoued/Documents/Rendu/my_show_time/concert-vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/jaoued/Documents/Rendu/my_show_time/concert-vue/src/store/modules/user.js"],"names":["token","window","localStorage","getItem","state","user","messageInscription","messageLogin","userInfo","users","getters","getLogin","getInscription","getUserInfo","getAllUser","actions","loginForm","obj","commit","formdata","FormData","append","email","password","requestOptions","method","body","redirect","console","log","fetch","then","response","json","result","setItem","success","error","location","href","catch","deleteUser","id","myHeaders","Headers","headers","text","reload","inscription","nom","c_password","tel","prenom","createUser","fetchUser","fetchAllUser","updateUserById","is_admin","image","adresse","societe","modifyUser","raw","JSON","stringify","modifyPassword","mutations","loginMessage","inscriptionMessage"],"mappings":";;;AAAC,IAAMA,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,KAAwC,EAAtD;AAGD,IAAMC,KAAK,GAAG;AACVC,EAAAA,IAAI,EAAG,EADG;AAEVC,EAAAA,kBAAkB,EAAC,EAFT;AAGVC,EAAAA,YAAY,EAAC,EAHH;AAIVC,EAAAA,QAAQ,EAAC,EAJC;AAKVC,EAAAA,KAAK,EAAC;AALI,CAAd;AAOA,IAAMC,OAAO,GAAG;AACZC,EAAAA,QAAQ,EAAC,kBAACP,KAAD;AAAA,WAAYA,KAAK,CAACG,YAAlB;AAAA,GADG;AAEZK,EAAAA,cAAc,EAAC,wBAACR,KAAD;AAAA,WAAUA,KAAK,CAACE,kBAAhB;AAAA,GAFH;AAGZO,EAAAA,WAAW,EAAC,qBAACT,KAAD;AAAA,WAAWA,KAAK,CAACI,QAAjB;AAAA,GAHA;AAIZM,EAAAA,UAAU,EAAC,oBAACV,KAAD;AAAA,WAAWA,KAAK,CAACK,KAAjB;AAAA;AAJC,CAAhB;AAMA,IAAMM,OAAO,GAAG;AACf;AAEaC,EAAAA,SAHE,2BAGiBC,GAHjB,EAGqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAZC,cAAAA,MAAY,QAAZA,MAAY;AACrBC,cAAAA,QADqB,GACV,IAAIC,QAAJ,EADU;AAEzBD,cAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBJ,GAAG,CAACK,KAA7B;AACAH,cAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BJ,GAAG,CAACM,QAAhC;AAEIC,cAAAA,cALqB,GAKJ;AACrBC,gBAAAA,MAAM,EAAE,MADa;AAErBC,gBAAAA,IAAI,EAAEP,QAFe;AAGrBQ,gBAAAA,QAAQ,EAAE;AAHW,eALI;AAWzBC,cAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AAEAY,cAAAA,KAAK,CAAC,oDAAD,EAAuDN,cAAvD,CAAL,CACCO,IADD,CACM,UAAAC,QAAQ;AAAA,uBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,eADd,EAECF,IAFD,CAEM,UAAAG,MAAM,EAAK;AACbhB,gBAAAA,MAAM,CAAC,cAAD,EAAgBgB,MAAhB,CAAN;AAEAjC,gBAAAA,MAAM,CAACC,YAAP,CAAoBiC,OAApB,CAA4B,OAA5B,EAAoCD,MAAM,CAACE,OAAP,CAAepC,KAAnD;;AAGA,oBAAG,CAACkC,MAAM,CAACG,KAAX,EAAiB;AACfpC,kBAAAA,MAAM,CAACqC,QAAP,CAAgBC,IAAhB,GAAqB,GAArB;AACD;AACF,eAXH,EAYCC,KAZD,CAYO,UAAAH,KAAK;AAAA,uBAAIT,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBQ,KAArB,CAAJ;AAAA,eAZZ;;AAbyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0B5B,GA7BO;AAgCNI,EAAAA,UAhCM,6BAgCcC,EAhCd,EAgCiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAXxB,cAAAA,MAAW,SAAXA,MAAW;AACrByB,cAAAA,SADqB,GACT,IAAIC,OAAJ,EADS;AAEzBD,cAAAA,SAAS,CAACtB,MAAV,CAAiB,eAAjB,mBAA4CrB,KAA5C;AAGIwB,cAAAA,cALqB,GAKJ;AACrBC,gBAAAA,MAAM,EAAE,QADa;AAErBoB,gBAAAA,OAAO,EAAEF,SAFY;AAGrBhB,gBAAAA,QAAQ,EAAE;AAHW,eALI;AAWzBG,cAAAA,KAAK,8DAAuDY,EAAvD,GAA6DlB,cAA7D,CAAL,CACCO,IADD,CACM,UAAAC,QAAQ;AAAA,uBAAIA,QAAQ,CAACc,IAAT,EAAJ;AAAA,eADd,EAECf,IAFD,CAEM,UAAAG,MAAM,EAAI;AACZN,gBAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ,EAAmBhB,MAAnB;AACAoB,gBAAAA,QAAQ,CAACS,MAAT;AACH,eALD,EAMCP,KAND,CAMO,UAAAH,KAAK;AAAA,uBAAIT,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBQ,KAArB,CAAJ;AAAA,eANZ;;AAXyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkB5B,GAlDW;AAoDNW,EAAAA,WApDM,8BAoDe/B,GApDf,EAoDmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAZC,cAAAA,MAAY,SAAZA,MAAY;AACnBC,cAAAA,QADmB,GACR,IAAIC,QAAJ,EADQ;AAGvBD,cAAAA,QAAQ,CAACE,MAAT,CAAgB,KAAhB,EAAuBJ,GAAG,CAACgC,GAA3B;AACA9B,cAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBJ,GAAG,CAACK,KAA7B;AACAH,cAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BJ,GAAG,CAACM,QAAhC;AACAJ,cAAAA,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8BJ,GAAG,CAACiC,UAAlC;AACZ;;;;AAGY/B,cAAAA,QAAQ,CAACE,MAAT,CAAgB,KAAhB,EAAuBJ,GAAG,CAACkC,GAA3B;AACP;;AACOhC,cAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0BJ,GAAG,CAACmC,MAA9B;AAGI5B,cAAAA,cAfmB,GAeF;AACrBC,gBAAAA,MAAM,EAAE,MADa;AAErBC,gBAAAA,IAAI,EAAEP,QAFe;AAGrBQ,gBAAAA,QAAQ,EAAE;AAHW,eAfE;AAqBvBG,cAAAA,KAAK,CAAC,uDAAD,EAA0DN,cAA1D,CAAL,CACCO,IADD,CACM,UAAAC,QAAQ,EAAG;AACb,uBAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,eAHD,EAICF,IAJD,CAIM,UAAAG,MAAM,EAAI;AACZhB,gBAAAA,MAAM,CAAC,oBAAD,EAAsBgB,MAAtB,CAAN;AACAjC,gBAAAA,MAAM,CAACC,YAAP,CAAoBiC,OAApB,CAA4B,OAA5B,EAAoCD,MAAM,CAACE,OAAP,CAAepC,KAAnD;;AACA,oBAAG,CAACkC,MAAM,CAACG,KAAX,EAAiB;AACfpC,kBAAAA,MAAM,CAACqC,QAAP,CAAgBC,IAAhB,GAAqB,GAArB;AACD;AACJ,eAVD,EAWCC,KAXD,CAWO,UAAAH,KAAK;AAAA,uBAAIT,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBQ,KAArB,CAAJ;AAAA,eAXZ;;AArBuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiC9B,GArFW;AAsFNgB,EAAAA,UAtFM,6BAsFcpC,GAtFd,EAsFkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAZC,cAAAA,MAAY,SAAZA,MAAY;AACtBC,cAAAA,QADsB,GACX,IAAIC,QAAJ,EADW;AAG1BD,cAAAA,QAAQ,CAACE,MAAT,CAAgB,KAAhB,EAAuBJ,GAAG,CAACgC,GAA3B;AACA9B,cAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBJ,GAAG,CAACK,KAA7B;AACAH,cAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BJ,GAAG,CAACM,QAAhC;AACAJ,cAAAA,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8BJ,GAAG,CAACiC,UAAlC;AACR;;;;AAGQ/B,cAAAA,QAAQ,CAACE,MAAT,CAAgB,KAAhB,EAAuBJ,GAAG,CAACkC,GAA3B;AACP;;AACOhC,cAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0BJ,GAAG,CAACmC,MAA9B;AAGI5B,cAAAA,cAfsB,GAeL;AACrBC,gBAAAA,MAAM,EAAE,MADa;AAErBC,gBAAAA,IAAI,EAAEP,QAFe;AAGrBQ,gBAAAA,QAAQ,EAAE;AAHW,eAfK;AAqB1BG,cAAAA,KAAK,CAAC,uDAAD,EAA0DN,cAA1D,CAAL,CACCO,IADD,CACM,UAAAC,QAAQ,EAAG;AACb,uBAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,eAHD,EAICF,IAJD,CAIM,UAAAG,MAAM,EAAI;AACZhB,gBAAAA,MAAM,CAAC,oBAAD,EAAsBgB,MAAtB,CAAN;AACAI,gBAAAA,QAAQ,CAACS,MAAT;AACH,eAPD,EAQCP,KARD,CAQO,UAAAH,KAAK;AAAA,uBAAIT,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBQ,KAArB,CAAJ;AAAA,eARZ;;AArB0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8BjC,GApHe;AAuHNiB,EAAAA,SAvHM,4BAuHa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAARpC,cAAAA,MAAQ,SAARA,MAAQ;AACjByB,cAAAA,SADiB,GACL,IAAIC,OAAJ,EADK;AAErBD,cAAAA,SAAS,CAACtB,MAAV,CAAiB,eAAjB,mBAA4CrB,KAA5C;AACA2C,cAAAA,SAAS,CAACtB,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AAEIG,cAAAA,cALiB,GAKA;AACrBC,gBAAAA,MAAM,EAAE,KADa;AAErBoB,gBAAAA,OAAO,EAAEF,SAFY;AAGrBhB,gBAAAA,QAAQ,EAAE;AAHW,eALA;AAWrBG,cAAAA,KAAK,CAAC,uDAAD,EAA0DN,cAA1D,CAAL,CACCO,IADD,CACM,UAAAC,QAAQ,EAAI;AACd,uBAAOA,QAAQ,CAACC,IAAT,EAAP;AAAuB,eAF3B,EAGCF,IAHD,CAGM,UAAAG,MAAM;AAAA,uBAAIhB,MAAM,CAAC,WAAD,EAAagB,MAAb,CAAV;AAAA,eAHZ,EAICM,KAJD,CAIO,UAAAH,KAAK;AAAA,uBAAIT,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBQ,KAArB,CAAJ;AAAA,eAJZ;;AAXqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBxB,GAvIW;AAwINkB,EAAAA,YAxIM,+BAwIgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAARrC,cAAAA,MAAQ,SAARA,MAAQ;AACpByB,cAAAA,SADoB,GACR,IAAIC,OAAJ,EADQ;AAExBD,cAAAA,SAAS,CAACtB,MAAV,CAAiB,eAAjB,mBAA4CrB,KAA5C;AACA2C,cAAAA,SAAS,CAACtB,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AAEIG,cAAAA,cALoB,GAKH;AACrBC,gBAAAA,MAAM,EAAE,KADa;AAErBoB,gBAAAA,OAAO,EAAEF,SAFY;AAGrBhB,gBAAAA,QAAQ,EAAE;AAHW,eALG;AAWxBG,cAAAA,KAAK,CAAC,oDAAD,EAAuDN,cAAvD,CAAL,CACCO,IADD,CACM,UAAAC,QAAQ,EAAI;AACd,uBAAOA,QAAQ,CAACC,IAAT,EAAP;AAAuB,eAF3B,EAGCF,IAHD,CAGM,UAAAG,MAAM;AAAA,uBAAIhB,MAAM,CAAC,cAAD,EAAgBgB,MAAhB,CAAV;AAAA,eAHZ,EAICM,KAJD,CAIO,UAAAH,KAAK;AAAA,uBAAIT,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBQ,KAArB,CAAJ;AAAA,eAJZ;;AAXwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgB3B,GAxJW;AAyJNmB,EAAAA,cAzJM,iCAyJkBvC,GAzJlB,EAyJsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAZC,cAAAA,MAAY,SAAZA,MAAY;AAC1ByB,cAAAA,SAD0B,GACd,IAAIC,OAAJ,EADc;AAE9BD,cAAAA,SAAS,CAACtB,MAAV,CAAiB,eAAjB,mBAA4CrB,KAA5C;AAEAmB,cAAAA,QAJ8B,GAInB,IAAIC,QAAJ,EAJmB;AAKlCD,cAAAA,QAAQ,CAACE,MAAT,CAAgB,KAAhB,EAAuBJ,GAAG,CAACgC,GAA3B;AACA9B,cAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0BJ,GAAG,CAACmC,MAA9B;AAEOjC,cAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BJ,GAAG,CAACwC,QAAhC;AAEAtC,cAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBJ,GAAG,CAACyC,KAA7B;AAEPvC,cAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BJ,GAAG,CAAC0C,OAA/B;AACAxC,cAAAA,QAAQ,CAACE,MAAT,CAAgB,KAAhB,EAAuBJ,GAAG,CAACkC,GAA3B;AACAhC,cAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BJ,GAAG,CAAC2C,OAA/B;AACAzC,cAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBJ,GAAG,CAACK,KAA7B;AAEIE,cAAAA,cAjB8B,GAiBb;AACnBC,gBAAAA,MAAM,EAAE,MADW;AAEnBoB,gBAAAA,OAAO,EAAEF,SAFU;AAGnBjB,gBAAAA,IAAI,EAAEP,QAHa;AAInBQ,gBAAAA,QAAQ,EAAE;AAJS,eAjBa;AAwBlCG,cAAAA,KAAK,qEAA8Db,GAAG,CAACyB,EAAlE,GAAwElB,cAAxE,CAAL,CACGO,IADH,CACQ,UAAAC,QAAQ;AAAA,uBAAIA,QAAQ,CAACc,IAAT,EAAJ;AAAA,eADhB,EAEGf,IAFH,CAEQ,UAAAG,MAAM,EAAI;AACZN,gBAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ,EAAmBhB,MAAnB;AACAoB,gBAAAA,QAAQ,CAACS,MAAT;AACD,eALL,EAMGP,KANH,CAMS,UAAAH,KAAK;AAAA,uBAAIT,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBQ,KAArB,CAAJ;AAAA,eANd;;AAxBkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+BjC,GAxLW;AA0LNwB,EAAAA,UA1LM,6BA0Lc5C,GA1Ld,EA0LkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAZC,cAAAA,MAAY,SAAZA,MAAY;AACtByB,cAAAA,SADsB,GACV,IAAIC,OAAJ,EADU;AAEtBD,cAAAA,SAAS,CAACtB,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AACAsB,cAAAA,SAAS,CAACtB,MAAV,CAAiB,eAAjB,mBAA4CrB,KAA5C;AAEI8D,cAAAA,GALkB,GAKZC,IAAI,CAACC,SAAL,CAAe;AAAC,0BAAS/C,GAAG,CAACmC,MAAd;AAAqB,uBAAMnC,GAAG,CAACgC,GAA/B;AAAmC,yBAAQhC,GAAG,CAACK,KAA/C;AAAqD,2BAAUL,GAAG,CAAC0C,OAAnE;AAA2E,uBAAM1C,GAAG,CAACkC,GAArF;AAAyF,2BAAUlC,GAAG,CAAC2C;AAAvG,eAAf,CALY;AAMtBhC,cAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AACIM,cAAAA,cAPkB,GAOD;AACrBC,gBAAAA,MAAM,EAAE,KADa;AAErBoB,gBAAAA,OAAO,EAAEF,SAFY;AAGrBjB,gBAAAA,IAAI,EAAEoC,GAHe;AAIrBnC,gBAAAA,QAAQ,EAAE;AAJW,eAPC;AActBG,cAAAA,KAAK,8DAAuDb,GAAG,CAACyB,EAA3D,GAAiElB,cAAjE,CAAL,CACCO,IADD,CACM,UAAAC,QAAQ;AAAA,uBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,eADd,EAECF,IAFD,CAEM,UAAAG,MAAM,EAAI;AACZN,gBAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ,EAAmBhB,MAAnB;AACAoB,gBAAAA,QAAQ,CAACS,MAAT;AACH,eALD,EAMCP,KAND,CAMO,UAAAH,KAAK;AAAA,uBAAIT,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBQ,KAArB,CAAJ;AAAA,eANZ;;AAdsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBzB,GAhNO;AAmNN4B,EAAAA,cAnNM,iCAmNkBhD,GAnNlB,EAmNsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAZC,cAAAA,MAAY,SAAZA,MAAY;AACdyB,cAAAA,SADc,GACF,IAAIC,OAAJ,EADE;AAEdD,cAAAA,SAAS,CAACtB,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AACAsB,cAAAA,SAAS,CAACtB,MAAV,CAAiB,eAAjB,mBAA4CrB,KAA5C;AAEI8D,cAAAA,GALU,GAKJC,IAAI,CAACC,SAAL,CAAe;AAAC,4BAAW/C,GAAG,CAACM,QAAhB;AAAyB,8BAAaN,GAAG,CAACiC;AAA1C,eAAf,CALI;AAMdtB,cAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AACIM,cAAAA,cAPU,GAOO;AACrBC,gBAAAA,MAAM,EAAE,KADa;AAErBoB,gBAAAA,OAAO,EAAEF,SAFY;AAGrBjB,gBAAAA,IAAI,EAAEoC,GAHe;AAIrBnC,gBAAAA,QAAQ,EAAE;AAJW,eAPP;AAcdG,cAAAA,KAAK,8DAAuDb,GAAG,CAACyB,EAA3D,GAAiElB,cAAjE,CAAL,CACCO,IADD,CACM,UAAAC,QAAQ;AAAA,uBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,eADd,EAECF,IAFD,CAEM,UAAAG,MAAM,EAAI;AACZN,gBAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ,EAAmBhB,MAAnB;AACAoB,gBAAAA,QAAQ,CAACS,MAAT;AACH,eALD,EAMCP,KAND,CAMO,UAAAH,KAAK;AAAA,uBAAIT,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBQ,KAArB,CAAJ;AAAA,eANZ;;AAdc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBT;AAxOb,CAAhB;AA2OA,IAAM6B,SAAS,GAAG;AACdC,EAAAA,YAAY,EAAC,sBAAC/D,KAAD,EAAOG,YAAP;AAAA,WAAwBH,KAAK,CAACG,YAAN,GAAqBA,YAA7C;AAAA,GADC;AAEd6D,EAAAA,kBAAkB,EAAC,4BAAChE,KAAD,EAAOE,kBAAP;AAAA,WAA6BF,KAAK,CAACE,kBAAN,GAA2BA,kBAAxD;AAAA,GAFL;AAGdgD,EAAAA,SAAS,EAAC,mBAAClD,KAAD,EAAOI,QAAP;AAAA,WAAqBJ,KAAK,CAACI,QAAN,GAAiBA,QAAtC;AAAA,GAHI;AAId+C,EAAAA,YAAY,EAAC,sBAACnD,KAAD,EAAOK,KAAP;AAAA,WAAkBL,KAAK,CAACK,KAAN,GAAcA,KAAhC;AAAA;AAJC,CAAlB;AASA,eAAc;AACVL,EAAAA,KAAK,EAALA,KADU;AAEVM,EAAAA,OAAO,EAAPA,OAFU;AAGVK,EAAAA,OAAO,EAAPA,OAHU;AAIVmD,EAAAA,SAAS,EAATA;AAJU,CAAd","sourcesContent":[" const token = window.localStorage.getItem('token') || \"\"; \n\n\nconst state = {\n    user : [],\n    messageInscription:[],\n    messageLogin:\"\",\n    userInfo:[],\n    users:[],\n}\nconst getters = {\n    getLogin:(state) => (state.messageLogin),\n    getInscription:(state)=>(state.messageInscription),\n    getUserInfo:(state) =>(state.userInfo),\n    getAllUser:(state) =>(state.users),\n}\nconst actions = {\n //LOGIN \n\n        async loginForm({commit},obj){\n            var formdata = new FormData();\n            formdata.append(\"email\", obj.email);\n            formdata.append(\"password\", obj.password);\n    \n            var requestOptions = {\n            method: 'POST',\n            body: formdata,\n            redirect: 'follow'\n            };\n    \n            console.log(commit);\n    \n            fetch(\"https://agile-temple-13407.herokuapp.com/api/login\", requestOptions)\n            .then(response => response.json())\n            .then(result =>  {\n                commit('loginMessage',result);\n                \n                window.localStorage.setItem('token',result.success.token);\n         \n           \n                if(!result.error){\n                  window.location.href=\"/\";\n                }\n              })\n            .catch(error => console.log('error', error));\n        },\n\n         \n    async deleteUser({commit},id){\n        var myHeaders = new Headers();\n        myHeaders.append(\"Authorization\", `Bearer ${token}` );\n\n\n        var requestOptions = {\n        method: 'DELETE',\n        headers: myHeaders,\n        redirect: 'follow'\n        };\n        \n        fetch(`https://agile-temple-13407.herokuapp.com/api/users/${id}`, requestOptions)\n        .then(response => response.text())\n        .then(result => {\n            console.log(result,commit)\n            location.reload();\n        })\n        .catch(error => console.log('error', error));\n    },\n\n    async inscription({commit},obj){\n            var formdata = new FormData();\n           \n            formdata.append(\"nom\", obj.nom);\n            formdata.append(\"email\", obj.email);\n            formdata.append(\"password\", obj.password);\n            formdata.append(\"c_password\", obj.c_password);\n/*             formdata.append(\"numero_rue\", obj.numero_rue);\n            formdata.append(\"adresse\", obj.adresse);\n            formdata.append(\"code_postal\", obj.code_postal); */\n            formdata.append(\"tel\", obj.tel);\n     /*        formdata.append(\"societe\", obj.societe); */\n            formdata.append(\"prenom\", obj.prenom);\n            \n\n            var requestOptions = {\n            method: 'POST',\n            body: formdata,\n            redirect: 'follow'\n            };\n\n            fetch(\"https://agile-temple-13407.herokuapp.com/api/register\", requestOptions)\n            .then(response =>{\n                return response.json()\n            })\n            .then(result => {\n                commit('inscriptionMessage',result);\n                window.localStorage.setItem('token',result.success.token);\n                if(!result.error){\n                  window.location.href=\"/\";\n                }\n            })\n            .catch(error => console.log('error', error));\n    },\n    async createUser({commit},obj){\n        var formdata = new FormData();\n       \n        formdata.append(\"nom\", obj.nom);\n        formdata.append(\"email\", obj.email);\n        formdata.append(\"password\", obj.password);\n        formdata.append(\"c_password\", obj.c_password);\n/*             formdata.append(\"numero_rue\", obj.numero_rue);\n        formdata.append(\"adresse\", obj.adresse);\n        formdata.append(\"code_postal\", obj.code_postal); */\n        formdata.append(\"tel\", obj.tel);\n /*        formdata.append(\"societe\", obj.societe); */\n        formdata.append(\"prenom\", obj.prenom);\n        \n\n        var requestOptions = {\n        method: 'POST',\n        body: formdata,\n        redirect: 'follow'\n        };\n\n        fetch(\"https://agile-temple-13407.herokuapp.com/api/register\", requestOptions)\n        .then(response =>{\n            return response.json()\n        })\n        .then(result => {\n            commit('inscriptionMessage',result);\n            location.reload();\n        })\n        .catch(error => console.log('error', error));\n},\n\n\n    async fetchUser({commit}){\n        var myHeaders = new Headers();\n        myHeaders.append(\"Authorization\", `Bearer ${token}` );\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        var requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n        };\n\n        fetch(\"https://agile-temple-13407.herokuapp.com/api/users/me\", requestOptions)\n        .then(response => {\n            return response.json()})\n        .then(result => commit('fetchUser',result))\n        .catch(error => console.log('error', error));\n    },\n    async fetchAllUser({commit}){\n        var myHeaders = new Headers();\n        myHeaders.append(\"Authorization\", `Bearer ${token}` );\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        var requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n        };\n\n        fetch(\"https://agile-temple-13407.herokuapp.com/api/users\", requestOptions)\n        .then(response => {\n            return response.json()})\n        .then(result => commit('fetchAllUser',result))\n        .catch(error => console.log('error', error));\n    },\n    async updateUserById({commit},obj){\n        var myHeaders = new Headers();\n        myHeaders.append(\"Authorization\", `Bearer ${token}` );\n\n    var formdata = new FormData();\n    formdata.append(\"nom\", obj.nom);\n    formdata.append(\"prenom\", obj.prenom);\n\n           formdata.append(\"is_admin\", obj.is_admin); \n\n           formdata.append(\"image\", obj.image); \n\n    formdata.append(\"adresse\", obj.adresse);\n    formdata.append(\"tel\", obj.tel);\n    formdata.append(\"societe\", obj.societe);\n    formdata.append(\"email\", obj.email);\n    \n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: formdata,\n      redirect: 'follow'\n    };\n    \n    fetch(`https://agile-temple-13407.herokuapp.com/api/users/update/${obj.id}`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n          console.log(result,commit)\n          location.reload();\n        })\n      .catch(error => console.log('error', error));\n    },\n\n    async modifyUser({commit},obj){\n        var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            myHeaders.append(\"Authorization\", `Bearer ${token}` );\n\n            var raw = JSON.stringify({\"prenom\":obj.prenom,\"nom\":obj.nom,\"email\":obj.email,\"adresse\":obj.adresse,\"tel\":obj.tel,\"societe\":obj.societe});\n            console.log(commit)\n            var requestOptions = {\n            method: 'PUT',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n            };\n\n            fetch(`https://agile-temple-13407.herokuapp.com/api/users/${obj.id}`, requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                console.log(result,commit)\n                location.reload();\n            })\n            .catch(error => console.log('error', error));\n        \n        },\n\n\n    async modifyPassword({commit},obj){\n                    var myHeaders = new Headers();\n                        myHeaders.append(\"Content-Type\", \"application/json\");\n                        myHeaders.append(\"Authorization\", `Bearer ${token}` );\n            \n                        var raw = JSON.stringify({\"password\":obj.password,\"c_password\":obj.c_password});\n                        console.log(commit)\n                        var requestOptions = {\n                        method: 'PUT',\n                        headers: myHeaders,\n                        body: raw,\n                        redirect: 'follow'\n                        };\n            \n                        fetch(`https://agile-temple-13407.herokuapp.com/api/users/${obj.id}`, requestOptions)\n                        .then(response => response.json())\n                        .then(result => {\n                            console.log(result,commit)\n                            location.reload();\n                        })\n                        .catch(error => console.log('error', error));\n                            }\n}\n\nconst mutations = {\n    loginMessage:(state,messageLogin) =>(state.messageLogin = messageLogin),\n    inscriptionMessage:(state,messageInscription)=>(state.messageInscription = messageInscription),\n    fetchUser:(state,userInfo) => (state.userInfo = userInfo),\n    fetchAllUser:(state,users) => (state.users = users),\n}\n\n\n\nexport default{\n    state,\n    getters,\n    actions,\n    mutations,\n}"]}]}