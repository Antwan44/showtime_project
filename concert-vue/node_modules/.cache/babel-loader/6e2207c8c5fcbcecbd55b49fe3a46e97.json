{"remainingRequest":"/home/jaoued/Documents/Rendu/my_show_time/concert-vue/node_modules/babel-loader/lib/index.js!/home/jaoued/Documents/Rendu/my_show_time/concert-vue/node_modules/eslint-loader/index.js??ref--13-0!/home/jaoued/Documents/Rendu/my_show_time/concert-vue/src/store/modules/user.js","dependencies":[{"path":"/home/jaoued/Documents/Rendu/my_show_time/concert-vue/src/store/modules/user.js","mtime":1599920232107},{"path":"/home/jaoued/Documents/Rendu/my_show_time/concert-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jaoued/Documents/Rendu/my_show_time/concert-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jaoued/Documents/Rendu/my_show_time/concert-vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/jaoued/Documents/Rendu/my_show_time/concert-vue/src/store/modules/user.js"],"names":["token","window","localStorage","getItem","url","state","users","login","register","UserById","deleteUserById","message","createmessage","getters","getAllUser","getLogin","getRegister","getUser","getMessage","getUpdateMessage","updatemessage","getCreateMessage","actions","fetchAllUser","commit","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","then","response","json","result","catch","error","console","log","loginForm","obj","raw","JSON","stringify","email","password","body","setItem","user","_id","location","href","password_confirmation","phone","firstname","lastname","createUser","reload","editUserForm","admin","id","fetchUser","deleteUser","mutations","loginMessage","registerMessage","createMessage","updateMessage"],"mappings":";;;AAAA,IAAMA,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,KAAwC,EAAtD;AACA,IAAIC,GAAG,0BAAP;AAEA,IAAMC,KAAK,GAAG;AAEZC,EAAAA,KAAK,EAAC,EAFM;AAGZC,EAAAA,KAAK,EAAC,EAHM;AAIZC,EAAAA,QAAQ,EAAC,EAJG;AAMZC,EAAAA,QAAQ,EAAC,EANG;AAOZC,EAAAA,cAAc,EAAC,EAPH;AAQZC,EAAAA,OAAO,EAAC,EARI;AASZC,EAAAA,aAAa,EAAC;AATF,CAAd;AAaA,IAAMC,OAAO,GAAG;AAEdC,EAAAA,UAAU,EAAC,oBAACT,KAAD;AAAA,WAAWA,KAAK,CAACC,KAAjB;AAAA,GAFG;AAGdS,EAAAA,QAAQ,EAAC,kBAACV,KAAD;AAAA,WAAYA,KAAK,CAACE,KAAlB;AAAA,GAHK;AAIdS,EAAAA,WAAW,EAAC,qBAACX,KAAD;AAAA,WAAWA,KAAK,CAACG,QAAjB;AAAA,GAJE;AAKdS,EAAAA,OAAO,EAAC,iBAACZ,KAAD;AAAA,WAAWA,KAAK,CAACI,QAAjB;AAAA,GALM;AAMdC,EAAAA,cAAc,EAAC,wBAACL,KAAD;AAAA,WAAUA,KAAK,CAACK,cAAhB;AAAA,GAND;AAOdQ,EAAAA,UAAU,EAAC,oBAACb,KAAD;AAAA,WAAWA,KAAK,CAACM,OAAjB;AAAA,GAPG;AAQdQ,EAAAA,gBAAgB,EAAC,0BAACd,KAAD;AAAA,WAAUA,KAAK,CAACe,aAAhB;AAAA,GARH;AASdC,EAAAA,gBAAgB,EAAC,0BAAChB,KAAD;AAAA,WAAUA,KAAK,CAACO,aAAhB;AAAA;AATH,CAAhB;AAWA,IAAMU,OAAO,GAAG;AAE0D;AACpEC,EAAAA,YAHU,8BAGY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAARC,cAAAA,MAAQ,QAARA,MAAQ;AAClBC,cAAAA,SADkB,GACN,IAAIC,OAAJ,EADM;AAEtBD,cAAAA,SAAS,CAACE,MAAV,CAAiB,eAAjB,mBAA4C3B,KAA5C;AACI4B,cAAAA,cAHkB,GAGD;AACnBC,gBAAAA,MAAM,EAAE,KADW;AAEnBC,gBAAAA,OAAO,EAAEL,SAFU;AAGnBM,gBAAAA,QAAQ,EAAE;AAHS,eAHC;AAStBC,cAAAA,KAAK,CAAC,6BAAD,EAAgCJ,cAAhC,CAAL,CACGK,IADH,CACQ,UAAAC,QAAQ;AAAA,uBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,eADhB,EAEGF,IAFH,CAEQ,UAAAG,MAAM;AAAA,uBAAIZ,MAAM,CAAC,cAAD,EAAgBY,MAAhB,CAAV;AAAA,eAFd,EAGGC,KAHH,CAGS,UAAAC,KAAK;AAAA,uBAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,CAAJ;AAAA,eAHd;;AATsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAajB,GAhBK;;AAkB0D;AAClEG,EAAAA,SAnBQ,4BAmBWC,GAnBX,EAmBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAZlB,cAAAA,MAAY,SAAZA,MAAY;AACjBC,cAAAA,SADiB,GACL,IAAIC,OAAJ,EADK;AAErBD,cAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AAEIgB,cAAAA,GAJiB,GAIXC,IAAI,CAACC,SAAL,CAAe;AAAC,yBAAQH,GAAG,CAACI,KAAb;AAAmB,4BAAWJ,GAAG,CAACK;AAAlC,eAAf,CAJW;AAMjBnB,cAAAA,cANiB,GAMA;AACrBC,gBAAAA,MAAM,EAAE,MADa;AAErBC,gBAAAA,OAAO,EAAEL,SAFY;AAGrBuB,gBAAAA,IAAI,EAAEL,GAHe;AAIrBZ,gBAAAA,QAAQ,EAAE;AAJW,eANA;AAczBC,cAAAA,KAAK,CAAC,4BAAD,EAA+BJ,cAA/B,CAAL,CACCK,IADD,CACM,UAAAC,QAAQ;AAAA,uBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,eADd,EAECF,IAFD,CAEM,UAAAG,MAAM,EAAK;AACbZ,gBAAAA,MAAM,CAAC,cAAD,EAAgBY,MAAhB,CAAN;AAEAnC,gBAAAA,MAAM,CAACC,YAAP,CAAoB+C,OAApB,CAA4B,OAA5B,EAAoCb,MAAM,CAACpC,KAAP,CAAaA,KAAjD;AACAC,gBAAAA,MAAM,CAACC,YAAP,CAAoB+C,OAApB,CAA4B,IAA5B,EAAiCb,MAAM,CAACc,IAAP,CAAYC,GAA7C;;AACA,oBAAG,CAACf,MAAM,CAACzB,OAAX,EAAmB;AACjBV,kBAAAA,MAAM,CAACmD,QAAP,CAAgBC,IAAhB,GAAqB,GAArB;AACD;AACF,eAVH,EAWChB,KAXD,CAWO,UAAAC,KAAK;AAAA,uBAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,CAAJ;AAAA,eAXZ;;AAdyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0B5B,GA7Ca;;AA8CyD;AAEnE9B,EAAAA,QAhDU,2BAgDQkC,GAhDR,EAgDY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAZlB,cAAAA,MAAY,SAAZA,MAAY;AAClBC,cAAAA,SADkB,GACN,IAAIC,OAAJ,EADM;AAElBD,cAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AAEIgB,cAAAA,GAJc,GAIRC,IAAI,CAACC,SAAL,CAAe;AAAC,yBAAQH,GAAG,CAACI,KAAb;AAAmB,4BAAWJ,GAAG,CAACK,QAAlC;AAA2C,yCAAwBL,GAAG,CAACY,qBAAvE;AAA6F,yBAAQZ,GAAG,CAACa,KAAzG;AAA+G,6BAAYb,GAAG,CAACc,SAA/H;AAAyI,4BAAWd,GAAG,CAACe;AAAxJ,eAAf,CAJQ;AAMd7B,cAAAA,cANc,GAMG;AACrBC,gBAAAA,MAAM,EAAE,MADa;AAErBC,gBAAAA,OAAO,EAAEL,SAFY;AAGrBuB,gBAAAA,IAAI,EAAEL,GAHe;AAIrBZ,gBAAAA,QAAQ,EAAE;AAJW,eANH;AAalBC,cAAAA,KAAK,CAAC,6BAAD,EAAgCJ,cAAhC,CAAL,CACCK,IADD,CACM,UAAAC,QAAQ;AAAA,uBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,eADd,EAECF,IAFD,CAEM,UAAAG,MAAM,EAAI;AACZZ,gBAAAA,MAAM,CAAC,iBAAD,EAAmBY,MAAnB,CAAN;;AACA,oBAAG,CAACA,MAAM,CAACzB,OAAX,EAAmB;AACfV,kBAAAA,MAAM,CAACmD,QAAP,CAAgBC,IAAhB,GAAqB,GAArB;AACD;AAEN,eARD,EASChB,KATD,CASO,UAAAC,KAAK;AAAA,uBAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,CAAJ;AAAA,eATZ;;AAbkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBb,GAvEC;AA0EhB;AACMoB,EAAAA,UA3EU,6BA2EUhB,GA3EV,EA2Ec;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAZlB,cAAAA,MAAY,SAAZA,MAAY;AAC1BC,cAAAA,SAD0B,GACd,IAAIC,OAAJ,EADc;AAE9BD,cAAAA,SAAS,CAACE,MAAV,CAAiB,eAAjB,mBAA4C3B,KAA5C;AACAyB,cAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AAEMgB,cAAAA,GALwB,GAKlBC,IAAI,CAACC,SAAL,CAAe;AAAC,yBAAQH,GAAG,CAACI,KAAb;AAAmB,4BAAWJ,GAAG,CAACK,QAAlC;AAA2C,yCAAwBL,GAAG,CAACY,qBAAvE;AAA6F,yBAAQZ,GAAG,CAACa,KAAzG;AAA+G,6BAAYb,GAAG,CAACc,SAA/H;AAAyI,4BAAWd,GAAG,CAACe;AAAxJ,eAAf,CALkB;AAS1B7B,cAAAA,cAT0B,GAST;AACnBC,gBAAAA,MAAM,EAAE,MADW;AAEnBmB,gBAAAA,IAAI,EAAEL,GAFa;AAGnBb,gBAAAA,OAAO,EAAEL,SAHU;AAInBM,gBAAAA,QAAQ,EAAE;AAJS,eATS;AAgB9BC,cAAAA,KAAK,WAAI5B,GAAJ,aAAiBwB,cAAjB,CAAL,CACGK,IADH,CACQ,UAAAC,QAAQ;AAAA,uBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,eADhB,EAEGF,IAFH,CAEQ,UAAAG,MAAM,EAAK;AACbZ,gBAAAA,MAAM,CAAC,eAAD,EAAiBY,MAAjB,CAAN;AACAgB,gBAAAA,QAAQ,CAACO,MAAT;AAED,eANL,EAOGtB,KAPH,CAOS,UAAAC,KAAK;AAAA,uBAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,CAAJ;AAAA,eAPd;;AAhB8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwB7B,GAnGe;AAqGhB;AACMsB,EAAAA,YAtGU,+BAsGYlB,GAtGZ,EAsGgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAZlB,cAAAA,MAAY,SAAZA,MAAY;AAC5BC,cAAAA,SAD4B,GAChB,IAAIC,OAAJ,EADgB;AAE1BD,cAAAA,SAAS,CAACE,MAAV,CAAiB,eAAjB,mBAA4C3B,KAA5C;AAEAyB,cAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAgC,kBAAhC;AACIgB,cAAAA,GALsB,GAKlBC,IAAI,CAACC,SAAL,CAAe;AAAC,yBAAQH,GAAG,CAACa,KAAb;AAAmB,6BAAYb,GAAG,CAACc,SAAnC;AAA6C,4BAAWd,GAAG,CAACe,QAA5D;AAAqE,yBAAQf,GAAG,CAACmB;AAAjF,eAAf,CALkB;AAQ5BjC,cAAAA,cAR4B,GAQX;AACnBC,gBAAAA,MAAM,EAAE,KADW;AAEnBC,gBAAAA,OAAO,EAAEL,SAFU;AAGnBuB,gBAAAA,IAAI,EAAEL,GAHa;AAInBZ,gBAAAA,QAAQ,EAAE;AAJS,eARW;AAehCC,cAAAA,KAAK,WAAI5B,GAAJ,oBAAiBsC,GAAG,CAACoB,EAArB,GAA2BlC,cAA3B,CAAL,CACGK,IADH,CACQ,UAAAC,QAAQ;AAAA,uBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,eADhB,EAEGF,IAFH,CAEQ,UAAAG,MAAM,EAAK;AACbZ,gBAAAA,MAAM,CAAC,eAAD,EAAiBY,MAAjB,CAAN;AACAgB,gBAAAA,QAAQ,CAACO,MAAT;AAED,eANL,EAOGtB,KAPH,CAOS,UAAAC,KAAK;AAAA,uBAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,CAAJ;AAAA,eAPd;;AAfgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuB/B,GA7He;AA+HhB;AACMyB,EAAAA,SAhIU,4BAgISD,EAhIT,EAgIY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAXtC,cAAAA,MAAW,SAAXA,MAAW;AACxBC,cAAAA,SADwB,GACZ,IAAIC,OAAJ,EADY;AAE5BD,cAAAA,SAAS,CAACE,MAAV,CAAiB,eAAjB,mBAA4C3B,KAA5C;AAEI4B,cAAAA,cAJwB,GAIP;AACrBC,gBAAAA,MAAM,EAAE,KADa;AAErBC,gBAAAA,OAAO,EAAEL,SAFY;AAIrBM,gBAAAA,QAAQ,EAAE;AAJW,eAJO;AAW5BC,cAAAA,KAAK,WAAI5B,GAAJ,oBAAiB0D,EAAjB,GAAuBlC,cAAvB,CAAL,CACCK,IADD,CACM,UAAAC,QAAQ;AAAA,uBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,eADd,EAECF,IAFD,CAEM,UAAAG,MAAM,EAAI;AACdZ,gBAAAA,MAAM,CAAC,UAAD,EAAYY,MAAZ,CAAN;AAGD,eAND,EAOCC,KAPD,CAOO,UAAAC,KAAK;AAAA,uBAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,CAAJ;AAAA,eAPZ;;AAX4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBvB,GAnJW;AAqJhB;AACM0B,EAAAA,UAtJU,6BAsJUF,EAtJV,EAsJa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAXtC,cAAAA,MAAW,SAAXA,MAAW;AACzBC,cAAAA,SADyB,GACb,IAAIC,OAAJ,EADa;AAE7BD,cAAAA,SAAS,CAACE,MAAV,CAAiB,eAAjB,mBAA4C3B,KAA5C;AAEI4B,cAAAA,cAJyB,GAIR;AACrBC,gBAAAA,MAAM,EAAE,QADa;AAErBC,gBAAAA,OAAO,EAAEL,SAFY;AAIrBM,gBAAAA,QAAQ,EAAE;AAJW,eAJQ;AAW7BC,cAAAA,KAAK,WAAI5B,GAAJ,oBAAiB0D,EAAjB,GAAuBlC,cAAvB,CAAL,CACCK,IADD,CACM,UAAAC,QAAQ;AAAA,uBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,eADd,EAECF,IAFD,CAEM,UAAAG,MAAM,EAAI;AAChBZ,gBAAAA,MAAM,CAAC,gBAAD,EAAkBY,MAAlB,CAAN;AACAgB,gBAAAA,QAAQ,CAACO,MAAT;AACC,eALD,EAMCtB,KAND,CAMO,UAAAC,KAAK;AAAA,uBAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,CAAJ;AAAA,eANZ;;AAX6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkB5B;AAxKe,CAAhB;AAgLA,IAAM2B,SAAS,GAAG;AAChBC,EAAAA,YAAY,EAAC,sBAAC7D,KAAD,EAAOE,KAAP;AAAA,WAAiBF,KAAK,CAACE,KAAN,GAAcA,KAA/B;AAAA,GADG;AAEhBgB,EAAAA,YAAY,EAAC,sBAAClB,KAAD,EAAOC,KAAP;AAAA,WAAkBD,KAAK,CAACC,KAAN,GAAcA,KAAhC;AAAA,GAFG;AAGhB6D,EAAAA,eAAe,EAAC,yBAAC9D,KAAD,EAAOG,QAAP;AAAA,WAAmBH,KAAK,CAACG,QAAN,GAAiBA,QAApC;AAAA,GAHA;AAKhBC,EAAAA,QAAQ,EAAC,kBAACJ,KAAD,EAAOI,SAAP;AAAA,WAAmBJ,KAAK,CAACI,QAAN,GAAiBA,SAApC;AAAA,GALO;AAMhBC,EAAAA,cAAc,EAAC,wBAACL,KAAD,EAAOK,eAAP;AAAA,WAAyBL,KAAK,CAACK,cAAN,GAAuBA,eAAhD;AAAA,GANC;AAOhB0D,EAAAA,aAAa,EAAC,uBAAC/D,KAAD,EAAOO,aAAP;AAAA,WAAwBP,KAAK,CAACO,aAAN,GAAsBA,aAA9C;AAAA,GAPE;AAQhByD,EAAAA,aAAa,EAAC,uBAAChE,KAAD,EAAOe,aAAP;AAAA,WAAwBf,KAAK,CAACe,aAAN,GAAsBA,aAA9C;AAAA;AARE,CAAlB;AAaA,eAAc;AACZf,EAAAA,KAAK,EAALA,KADY;AAEZQ,EAAAA,OAAO,EAAPA,OAFY;AAGZS,EAAAA,OAAO,EAAPA,OAHY;AAIZ2C,EAAAA,SAAS,EAATA;AAJY,CAAd","sourcesContent":["const token = window.localStorage.getItem('token') || \"\";  \nvar url = `http://localhost:3000`;\n\nconst state = {\n\n  users:[],\n  login:[],\n  register:[],\n\n  UserById:[],\n  deleteUserById:[], \n  message:[],\n  createmessage:[],\n\n\n}\nconst getters = {\n\n  getAllUser:(state) =>(state.users),\n  getLogin:(state) => (state.login),\n  getRegister:(state) =>(state.register),   \n  getUser:(state) =>(state.UserById),\n  deleteUserById:(state)=>(state.deleteUserById),\n  getMessage:(state) =>(state.message),\n  getUpdateMessage:(state)=>(state.updatemessage),\n  getCreateMessage:(state)=>(state.createmessage),\n}\nconst actions = {\n\n                                                                          /* ====== FETCH ALL USER ======= */\nasync fetchAllUser({commit}){\n      var myHeaders = new Headers();\n      myHeaders.append(\"Authorization\", `Bearer ${token}` );\n      var requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n      };\n\n      fetch(\"http://localhost:3000/users\", requestOptions)\n        .then(response => response.json())\n        .then(result => commit('fetchAllUser',result))\n        .catch(error => console.log('error', error));\n          },\n\n                                                                          /* ====== LOGIN ======= */\n  async loginForm({commit},obj){\n          var myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/json\");\n\n          var raw = JSON.stringify({\"email\":obj.email,\"password\":obj.password});\n\n          var requestOptions = {\n          method: 'POST',\n          headers: myHeaders,\n          body: raw,\n          redirect: 'follow'\n          };\n\n\n      fetch(\"http://localhost:3000/auth\", requestOptions)\n      .then(response => response.json())\n      .then(result =>  {\n          commit('loginMessage',result);\n     \n          window.localStorage.setItem('token',result.token.token);\n          window.localStorage.setItem('id',result.user._id);\n          if(!result.message){\n            window.location.href=\"/\";\n          }\n        })\n      .catch(error => console.log('error', error));\n  },\n                                                                         /* ====== REGISTER ======= */\n\nasync register({commit},obj){\n      var myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/json\");\n\n          var raw = JSON.stringify({\"email\":obj.email,\"password\":obj.password,\"password_confirmation\":obj.password_confirmation,\"phone\":obj.phone,\"firstname\":obj.firstname,\"lastname\":obj.lastname});\n\n          var requestOptions = {\n          method: 'POST',\n          headers: myHeaders,\n          body: raw,\n          redirect: 'follow'\n          };\n\n          fetch(\"http://localhost:3000/users\", requestOptions)\n          .then(response => response.json())\n          .then(result => {\n              commit('registerMessage',result);\n              if(!result.message){\n                  window.location.href=\"/\";\n                }\n          \n          })\n          .catch(error => console.log('error', error));\n              },\n\n\n// CREATE USER \nasync createUser({commit},obj){\nvar myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", `Bearer ${token}`);\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\n  var raw = JSON.stringify({\"email\":obj.email,\"password\":obj.password,\"password_confirmation\":obj.password_confirmation,\"phone\":obj.phone,\"firstname\":obj.firstname,\"lastname\":obj.lastname});\n\n\n\nvar requestOptions = {\n  method: 'POST',\n  body: raw,\n  headers: myHeaders,\n  redirect: 'follow'\n};\n\nfetch(`${url}/users`, requestOptions)\n  .then(response => response.json())\n  .then(result =>  {\n      commit('createMessage',result);\n      location.reload();\n     \n    })\n  .catch(error => console.log('error', error));\n},\n\n// EDIT USER \nasync editUserForm({commit},obj){\nvar myHeaders = new Headers();\n      myHeaders.append(\"Authorization\", `Bearer ${token}`);\n\n      myHeaders.append('Content-Type','application/json');\n      var raw=JSON.stringify({\"phone\":obj.phone,\"firstname\":obj.firstname,\"lastname\":obj.lastname,\"admin\":obj.admin});\n\n\nvar requestOptions = {\n  method: 'PUT',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(`${url}/users/${obj.id}`, requestOptions)\n  .then(response => response.json())\n  .then(result =>  {\n      commit('updateMessage',result);\n      location.reload();\n     \n    })\n  .catch(error => console.log('error', error));\n},\n\n// FETCH USER BY ID\nasync fetchUser({commit},id){\nvar myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", `Bearer ${token}`);\n\nvar requestOptions = {\nmethod: 'GET',\nheaders: myHeaders,\n\nredirect: 'follow'\n};\n\nfetch(`${url}/users/${id}`, requestOptions)\n.then(response => response.json())\n.then(result => {\n  commit('UserById',result);\n \n\n})\n.catch(error => console.log('error', error));\n    },\n\n// DELETE USER BY ID\nasync deleteUser({commit},id){\nvar myHeaders = new Headers();\nmyHeaders.append(\"Authorization\", `Bearer ${token}`);\n\nvar requestOptions = {\nmethod: 'DELETE',\nheaders: myHeaders,\n\nredirect: 'follow'\n};\n\nfetch(`${url}/users/${id}`, requestOptions)\n.then(response => response.json())\n.then(result => {\ncommit('deleteUserById',result);\nlocation.reload();\n})\n.catch(error => console.log('error', error));\n},\n\n\n\n}\n\n\n\nconst mutations = {\n  loginMessage:(state,login) =>(state.login = login),\n  fetchAllUser:(state,users) => (state.users = users),\n  registerMessage:(state,register)=>(state.register = register),\n\n  UserById:(state,UserById)=>(state.UserById = UserById),\n  deleteUserById:(state,deleteUserById)=>(state.deleteUserById = deleteUserById),    \n  createMessage:(state,createmessage)=>(state.createmessage = createmessage),\n  updateMessage:(state,updatemessage)=>(state.updatemessage = updatemessage),\n}\n\n\n\nexport default{\n  state,\n  getters,\n  actions,\n  mutations,\n}"]}]}